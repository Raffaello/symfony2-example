imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: @AcmeUserBundle/Resources/config/admin.yml }
    
framework:
    #esi:             ~
    #translator:      { fallback: "%locale%" }
    translator: ~
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"
        path:     %database_path%
        types:
            json: Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true
        #entity_managers:
        #    default:
        #        mappings:
        #            ApplicationSonataUserBundle: ~
        #            SonataUserBundle: ~
        #            FOSUserBundle: ~                                    
                    # If SonataUserBundle extends it
 
        

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
    disable_delivery: true
    delivery_address: raffaellobertini@gmail.com

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Acme\UserBundle\Entity\User
    #user_class:     Application\Sonata\UserBundle\Entity\User
    service:
        mailer: fos_user.mailer.twig_swift
    registration:
        confirmation:
            from_email:
                address: registration@UserBundle.org
                sender_name: Acme User Bundle registration
            #enabled: true
    resetting:
        email:
            from_email:
                address: resetting@UserBundle.org
                sender_name: Acme User Bundle resetting
            template: AcmeUserBundle:User:resetting.email.twig
        
    from_email:
        address: noreply@UserBundle.org
        sender_name: Acme User Bundle
        
    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    
        # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)

    service:
        user_manager: sonata.user.orm.user_manager                      
        # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)



sonata_core: 
    #flashmessage:
    #    success:
    #        types:
    #            - { type: my_custom_bundle_success, domain: MyCustomBundle }
    #            - { type: my_other_bundle_success, domain: MyOtherBundle }
    #    warning:
    #        types:
    #            - { type: my_custom_bundle_warning, domain: MyCustomBundle }
    #            - { type: my_other_bundle_warning } 
                # if nothing is specified, sets SonataCoreBundle by default
    #    error:
    #        css_class: danger 
            # optionally, a CSS class can be defined
    #        types:
    #            - { type: my_custom_bundle, domain: MyCustomBundle }
    #    custom_type: 
        # You can add custom types too
    #        types:
    #            - { type: custom_bundle_type, domain: MyCustomBundle }

sonata_block:
    default_context: [cms]
    blocks:
        sonata.admin.block.admin_list:
            context: [admin]
        sonata.block.service.text:
        sonata.block.service.rss:
        sonata.user.block.menu:
        sonata.user.block.account:
        sonata.news.block.recent_post:
        
sonata_admin:
    title: Administration
    #title_logo: bundles/acmeuser/images/logo.png
    dashboard:
        blocks:
            -
                position: left
                type: sonata.admin.block.admin_list
            -
                position: right
                type: sonata.block.service.text
                settings:
                    content: >
                        <h2>Welcome to the Sonata Admin</h2>
                        <p>This is a <code>sonata.block.service.text</code> from the Block
                        Bundle, you can create and add new block in these area by configuring
                        the <code>sonata_admin</code> section.</p> <br /> For instance, here
                        a RSS feed parser (<code>sonata.block.service.rss</code>):
            -
                position: right
                type: sonata.block.service.rss
                settings:
                    title: Sonata Project's Feeds
                    url: http://sonata-project.org/blog/archive.rss

sonata_user:
    profile:
        # Profile show page is a dashboard as in SonataAdminBundle
        dashboard:
            blocks:
                - { position: left, type: sonata.block.service.text, settings: { content: "<h2>Welcome!</h2> This is a sample user profile dashboard, feel free to override it in the configuration! Want to make this text dynamic? For instance display the user's name? Create a dedicated block and edit the configuration!"} }
                #- { position: left, type: sonata.order.block.recent_orders, settings: { title: Recent Orders, number: 5, mode: public }}
                #- { position: right, type: sonata.timeline.block.timeline, settings: { max_per_page: 15 }}
                #- { position: right, type: sonata.news.block.recent_posts, settings: { title: Recent Posts, number: 5, mode: public }}
                #- { position: right, type: sonata.news.block.recent_comments, settings: { title: Recent Comments, number: 5, mode: public }}
        # Customize user portal menu by setting links
        menu:
            - { route: 'sonata_user_profile_show', label: 'sonata_profile_title', domain: 'SonataUserBundle'}
            - { route: 'sonata_user_profile_edit', label: 'link_edit_profile', domain: 'SonataUserBundle'}
            #- { route: 'sonata_customer_addresses', label: 'link_list_addresses', domain: 'SonataCustomerBundle'}
            - { route: 'sonata_user_profile_edit_authentication', label: 'link_edit_authentication', domain: 'SonataUserBundle'}
            #- { route: 'sonata_order_index', label: 'order_list', domain: 'SonataOrderBundle'}

    